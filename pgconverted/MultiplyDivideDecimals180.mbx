<?xml version="1.0" encoding="UTF-8" ?>
<exercise>
  <original-metadata>
  <original-file>MultiplyDivideDecimals180</original-file>
  # WeBWorK problem written by Carl Yao
  # Portland Community College
  #
  # Template
  #
  # Calculate 0.4*70, 0.04*70, 0.004*700
  # 
  # Last updated: Yao, 12/20/2013
  #
  # ENDDESCRIPTION

  ## DBsubject('Algebra')
  ## DBchapter('Basic Algebra')
  ## DBsection('')
  ## KEYWORDS('decimal','multiply')
  ## DBCCSS('5.NBT.7')
  ## TitleText1('')
  ## EditionText1('')
  ## AuthorText1('')
  ## Section1('')
  ## Problem1('')
  ## Author('Carl Yao')
  ## Institution('PCC')
  </original-metadata>
  <webwork seed="1">
    <pg-macros>
    <macro-file>PGcourse.pl</macro-file>
    <macro-file>contextFraction.pl</macro-file>
    <macro-file>parserNumberWithUnits.pl</macro-file>
    </pg-macros>
    <setup>
      <var name="$int01">
        <!--<static></static>-->
      </var>
      <var name="$int00">
        <!--<static></static>-->
      </var>
      <var name="$int10">
        <!--<static></static>-->
      </var>
      <var name="$int11">
        <!--<static></static>-->
      </var>
      <var name="$move1">
        <!--<static></static>-->
      </var>
      <var name="$move11">
        <!--<static></static>-->
      </var>
      <var name="$move10">
        <!--<static></static>-->
      </var>
      <var name="$int21">
        <!--<static></static>-->
      </var>
      <var name="$int20">
        <!--<static></static>-->
      </var>
      <var name="$int30">
        <!--<static></static>-->
      </var>
      <var name="$int31">
        <!--<static></static>-->
      </var>
      <var name="$product2">
        <!--<static></static>-->
      </var>
      <var name="$product3">
        <!--<static></static>-->
      </var>
      <var name="$product0">
        <!--<static></static>-->
      </var>
      <var name="$product1">
        <!--<static></static>-->
      </var>
      <pg-code>
        sub moveOutput {
           my ($new,$old) = @_;
           if (Real($new/$old)==1) {return "did not move";}
           elsif (Real($new/$old)==10) {return "moved to the right once";}
           elsif (Real($new/$old)==100) {return "moved to the right twice";}
           elsif (Real($new/$old)==1000) {return "moved to the right three times";}
           elsif (Real($new/$old)==0.1) {return "moved to the left once";}
           elsif (Real($new/$old)==0.01) {return "moved to the left twice";}
           elsif (Real($new/$old)==0.001) {return "moved to the left three times";}
        }

        sub moveOutputShould {
           my ($new,$old) = @_;
           if (Real($new/$old)==1) {return "not move";}
           elsif (Real($new/$old)==10) {return "move to the right once";}
           elsif (Real($new/$old)==100) {return "move to the right twice";}
           elsif (Real($new/$old)==1000) {return "move to the right three times";}
           elsif (Real($new/$old)==0.1) {return "move to the left once";}
           elsif (Real($new/$old)==0.01) {return "move to the left twice";}
           elsif (Real($new/$old)==0.001) {return "move to the left three times";}
        }
        Context("LimitedNumeric");
        #Context()->{format}{number} = "%9d";

        $int00 = random(2,9,1);
        $int01 = random(2,9,1);
        $product0 = $int00*$int01;

        @num1 = ($int00/1000,$int00/100,$int00/10);
        @num2 = ($int01*10,$int01*100,$int01*1000);

        $int10 = splice(@num1,random(0,$#num1,1),1);
        $int11 = splice(@num2,random(0,$#num2,1),1);
        $product1 = $int10*$int11;
        $move10 = moveOutput($int10,$int00);
        $move11 = moveOutput($int11,$int01);
        $move1 = moveOutput($product1,$product0);

        $int20 = splice(@num1,random(0,$#num1,1),1);
        $int21 = splice(@num2,random(0,$#num2,1),1);
        $product2 = $int20*$int21;
        #$move20 = moveOutput($int20,$int00);
        #$move21 = moveOutput($int21,$int01);
        #$move2 = moveOutput($product2,$product0);

        $int30 = splice(@num1,random(0,$#num1,1),1);
        $int31 = splice(@num2,random(0,$#num2,1),1);
        $product3 = $int30*$int31;
        #$move30 = moveOutput($int30,$int00);
        #$move31 = moveOutput($int31,$int01);
        #$move3 = moveOutput($product3,$product0);
      </pg-code>
    </setup>
    <statement>
      <p>
        Calculate the following without using a calculator:
      </p>

      <p>
        a)    <m>\displaystyle{<var name="$int10" /> \cdot <var name="$int11" /> =}</m> <var name="$product1" width="11" />
      </p>

      <p>
        b)    <m>\displaystyle{<var name="$int20" /> \cdot <var name="$int21" /> =}</m> <var name="$product2" width="11" />
      </p>

      <p>
        c)    <m>\displaystyle{<var name="$int30" /> \cdot <var name="$int31" /> =}</m> <var name="$product3" width="11" />
      </p>
    </statement>
    <solution>
      <p>
        We will show how to calculate the first problem: <m><var name="$int10" /> \cdot <var name="$int11" /></m>.
      </p>

      <p>
        1. From <m><var name="$int00" /></m> to <m><var name="$int10" /></m>, the decimal point <var name="$move10" />.
        2. From <m><var name="$int01" /></m> to <m><var name="$int11" /></m>, the decimal point <var name="$move11" />.
        3. Altogether, the decimal point <var name="$move1" />.
        4. Since <m><var name="$int00" /> \cdot <var name="$int01" /> = <var name="$product0" /></m>, to calculate <m><var name="$int10" /> \cdot <var name="$int11" /></m>, the decimal point of <m><var name="$product0" /></m> should [@moveOutputShould($product1,$product0)@], and we have: <m><var name="$int10" /> \cdot <var name="$int11" /> = <var name="$product1" /></m>.
      </p>

      <p>
        <em>Solutions:</em>
      </p>

      <p>
        a) <m>\displaystyle{<var name="$int10" /> \cdot <var name="$int11" /> = <var name="$product1" />}</m>
        b) <m>\displaystyle{<var name="$int20" /> \cdot <var name="$int21" /> = <var name="$product2" />}</m>
        c) <m>\displaystyle{<var name="$int30" /> \cdot <var name="$int31" /> = <var name="$product3" />}</m>
      </p>
    </solution>
  </webwork>
</exercise>
