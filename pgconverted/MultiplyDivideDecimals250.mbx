<?xml version="1.0" encoding="UTF-8" ?>
<exercise>
  <original-metadata>
  <original-file>MultiplyDivideDecimals250</original-file>
  # WeBWorK problem written by Carl Yao
  # Portland Community College
  #
  # Given 115*15=1725, calculate 11.5*1500=?
  # 
  # Last updated: Yao, 11/20/2013
  #
  # ENDDESCRIPTION

  ## DBsubject('Algebra')
  ## DBchapter('Basic Algebra')
  ## DBsection('')
  ## KEYWORDS('decimal','multiply')
  ## DBCCSS('5.NBT')
  ## TitleText1('')
  ## EditionText1('')
  ## AuthorText1('')
  ## Section1('')
  ## Problem1('')
  ## Author('Carl Yao')
  ## Institution('PCC')
  </original-metadata>
  <webwork seed="1">
    <pg-macros>
    <macro-file>PCCmacros.pl</macro-file>
    <macro-file>PGcourse.pl</macro-file>
    <macro-file>contextFraction.pl</macro-file>
    <macro-file>parserNumberWithUnits.pl</macro-file>
    </pg-macros>
    <setup>
      <var name="$product1">
        <!--<static></static>-->
      </var>
      <var name="$move31">
        <!--<static></static>-->
      </var>
      <var name="$move30">
        <!--<static></static>-->
      </var>
      <var name="$move32">
        <!--<static></static>-->
      </var>
      <var name="$move12">
        <!--<static></static>-->
      </var>
      <var name="$move11">
        <!--<static></static>-->
      </var>
      <var name="$move10">
        <!--<static></static>-->
      </var>
      <var name="$num11">
        <!--<static></static>-->
      </var>
      <var name="$num10">
        <!--<static></static>-->
      </var>
      <var name="$num00">
        <!--<static></static>-->
      </var>
      <var name="$num01">
        <!--<static></static>-->
      </var>
      <var name="$move22">
        <!--<static></static>-->
      </var>
      <var name="$move20">
        <!--<static></static>-->
      </var>
      <var name="$move21">
        <!--<static></static>-->
      </var>
      <var name="$product2">
        <!--<static></static>-->
      </var>
      <var name="$product3">
        <!--<static></static>-->
      </var>
      <var name="$product0">
        <!--<static></static>-->
      </var>
      <var name="$num30">
        <!--<static></static>-->
      </var>
      <var name="$num20">
        <!--<static></static>-->
      </var>
      <var name="$num21">
        <!--<static></static>-->
      </var>
      <var name="$num31">
        <!--<static></static>-->
      </var>
      <pg-code>
        Context("Numeric");

        %moves = (
           -3 => 'to the left three times',
           -2 => 'to the left twice',
           -1 => 'to the left once',
           0 => 'neither left nor right',
           1 => 'to the right once',
           2 => 'to the right twice',
           3 => 'to the right three times',
        );

        $num00 = random(1,9,1)*10+random(1,9,1);
        $num01 = random(1,9,1)*10+random(1,9,1);
        $product0 = $num00*$num01;

        $num10 = $num00*list_random(0.1,0.01,0.001);
        $move10 = $moves{Real(log($num10/$num00)/log(10))};
        $num11 = $num01*list_random(10,100,1000);
        $move11 = $moves{Real(log($num11/$num01)/log(10))};
        $product1 = $num10*$num11;
        $move12 = $moves{Real(log($product1/$product0)/log(10))};

        $num20 = $num00*list_random(10,100,1000);
        $move20 = $moves{Real(log($num20/$num00)/log(10))};
        $num21 = $num01*list_random(0.1,0.01,0.001);
        $move21 = $moves{Real(log($num21/$num01)/log(10))};
        $product2 = $num20*$num21;
        $move22 = $moves{Real(log($product2/$product0)/log(10))};

        do {$num30 = $num00*list_random(0.1,0.01,0.001);} until ( ($num30!=$num10) &amp;&amp; ($num30!=$num21) );
        $move30 = $moves{Real(log($num30/$num00)/log(10))};
        do {$num31 = $num01*list_random(10,100,1000);} until ( ($num31!=$num11) &amp;&amp; ($num31!=$num20) );
        $move31 = $moves{Real(log($num31/$num01)/log(10))};
        $product3 = $num30*$num31;
        $move32 = $moves{Real(log($product3/$product0)/log(10))};

        Context("LimitedNumeric");
        $product1 = Compute($product1);
        $product2 = Compute($product2);
        $product3 = Compute($product3);
      </pg-code>
    </setup>
    <statement>
      <p>
        It's given that <m><var name="$num00" />\cdot<var name="$num01" />=<var name="$product0" /></m>. Calculate the following without using a calculator.
      </p>

      <p>
        ----
      </p>

      <p>
        <m><var name="$num10" /> \cdot <var name="$num11" /></m> = <var name="$product1" width="11" />
      </p>

      <p>
        ----
      </p>

      <p>
        <m><var name="$num20" /> \cdot <var name="$num21" /></m> = <var name="$product2" width="11" />
      </p>

      <p>
        ----
      </p>

      <p>
        <m><var name="$num30" /> \cdot <var name="$num31" /></m> = <var name="$product3" width="11" />
      </p>
    </statement>
    <solution>
      <p>
        It's given that <m><var name="$num00" />\cdot<var name="$num01" />=<var name="$product0" /></m>.
      </p>

      <p>
        ####Question 1
      </p>

      <p>
        Compare <m><var name="$num00" />\cdot<var name="$num01" /></m> with <m><var name="$num10" /> \cdot <var name="$num11" /></m>.
      </p>

      <p>
        From <m><var name="$num00" /></m> to <m><var name="$num10" /></m>, the decimal point moved <var name="$move10" />.
      </p>

      <p>
        From <m><var name="$num01" /></m> to <m><var name="$num11" /></m>, the decimal point moved <var name="$move11" />.
      </p>

      <p>
        Put together both movements, the decimal point of the product <m><var name="$product0" /></m> should move <var name="$move12" />:
      </p>

      <p>
        <md>
          <mrow><var name="$num00" />\cdot<var name="$num01" /> \amp=<var name="$product0" /></mrow>
          <mrow><var name="$num10" />\cdot<var name="$num11" /> \amp=<var name="$product1" /></mrow>
        </md>
      </p>

      <p>
        ####Question 2
      </p>

      <p>
        Compare <m><var name="$num00" />\cdot<var name="$num01" /></m> with <m><var name="$num20" /> \cdot <var name="$num21" /></m>.
      </p>

      <p>
        From <m><var name="$num00" /></m> to <m><var name="$num20" /></m>, the decimal point moved <var name="$move20" />.
      </p>

      <p>
        From <m><var name="$num01" /></m> to <m><var name="$num21" /></m>, the decimal point moved <var name="$move21" />.
      </p>

      <p>
        Put together both movements, the decimal point of the product <m><var name="$product0" /></m> should move <var name="$move22" />:
      </p>

      <p>
        <md>
          <mrow><var name="$num00" />\cdot<var name="$num01" /> \amp=<var name="$product0" /></mrow>
          <mrow><var name="$num20" />\cdot<var name="$num21" /> \amp=<var name="$product2" /></mrow>
        </md>
      </p>

      <p>
        ####Question 3
      </p>

      <p>
        Compare <m><var name="$num00" />\cdot<var name="$num01" /></m> with <m><var name="$num30" /> \cdot <var name="$num31" /></m>.
      </p>

      <p>
        From <m><var name="$num00" /></m> to <m><var name="$num30" /></m>, the decimal point moved <var name="$move30" />.
      </p>

      <p>
        From <m><var name="$num01" /></m> to <m><var name="$num31" /></m>, the decimal point moved <var name="$move31" />.
      </p>

      <p>
        Put together both movements, the decimal point of the product <m><var name="$product0" /></m> should move <var name="$move32" />:
      </p>

      <p>
        <md>
          <mrow><var name="$num00" />\cdot<var name="$num01" /> \amp=<var name="$product0" /></mrow>
          <mrow><var name="$num30" />\cdot<var name="$num31" /> \amp=<var name="$product3" /></mrow>
        </md>
      </p>
    </solution>
  </webwork>
</exercise>
